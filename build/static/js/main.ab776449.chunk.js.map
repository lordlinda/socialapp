{"version":3,"sources":["redux/userActions.js","redux/types.js","redux/userReducer.js","redux/dataReducer.js","redux/UIReducer.js","redux/store.js","redux/dataActions.js","components/PostScream.js","components/Notifications.js","components/Navbar.js","components/Comments.js","components/CommentForm.js","components/ScreamDialog.js","components/DeleteScream.js","components/LikeButton.js","components/Scream.js","components/EditDetails.js","components/ProfileSkeleton.js","components/Profile.js","components/ScreamSkeleton.js","components/Home.js","components/Login.js","components/Signup.js","components/AuthRoute.js","components/StaticProfile.js","components/User.js","App.js","serviceWorker.js","index.js","images/blank-profile-picture-973460_640.png"],"names":["getUserData","dispatch","type","axios","get","then","res","payload","data","catch","err","console","log","setAuthHeader","token","localStorage","setItem","defaults","headers","common","logOut","removeItem","initialState","authenticated","credentials","likes","notifications","screams","scream","loading","errors","middleware","thunk","reducers","combineReducers","user","state","action","userHandle","handle","screamId","filter","like","index","findIndex","block","splice","comments","UI","null","store","createStore","composeWithDevTools","applyMiddleware","clearErrors","connect","postScream","newScream","post","response","withStyles","submitButton","position","float","marginTop","progressSpinner","closeButton","props","useState","open","body","setPost","handleClose","handleSubmit","event","a","preventDefault","useEffect","classes","IconButton","onClick","Dialog","onClose","fullWidth","maxWidth","className","DialogTitle","DialogContent","onSubmit","TextField","name","placeholder","error","helperText","textField","value","onChange","target","Button","variant","color","disabled","CircularProgress","size","markNotificationsRead","notificationIds","anchorEl","setAnchorEl","dayjs","extend","relativeTime","Tooltip","placement","title","aria-owns","undefined","aria-haspopup","length","notification","read","Badge","badgeContent","Menu","Boolean","onEntered","unreadNotificationsIds","map","notificationId","not","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","to","recipient","sender","AppBar","Toolbar","commentImage","height","objectFit","borderRadius","commentData","marginLeft","Grid","container","comment","imageUrl","item","sm","Avatar","alt","src","format","invisibleSeparator","visibleSeparator","submitComment","form","display","alignItems","justifyContent","margin","button","textTransform","setForm","textAlign","label","getScream","profileImage","dialogContent","padding","left","expandButton","spinnerDiv","marginBottom","flexBox","oldPath","newPath","setScream","openDialog","handleOpen","window","location","pathname","history","pushState","likeCount","commentCount","thickness","deleteScream","delete","deleteButton","setOpen","tip","fontSize","DialogActions","mapActionsToProps","likeScream","unlikeScream","find","card","link","textDecoration","content","image","Card","CardContent","editUserDetails","userDetails","bio","website","details","setDetails","handleChange","tpye","multiline","rows","width","fullLine","backgroundColor","halfLine","paper","profile","top","verticalAlign","border","cursor","Paper","NoImg","uploadImage","formData","profileDetails","document","querySelector","click","id","hidden","e","files","FormData","append","inline","href","rel","align","cardContent","flexDirection","cover","minWidth","date","Array","from","CardMedia","getScreams","setScreams","spacing","xs","loginUser","userData","push","pageTitle","customError","progress","email","password","setFormData","noValidate","vriant","signupUser","confirmPassword","Component","rest","render","screamIdParam","setUserData","match","params","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","baseURL","jwtDecode","exp","Date","now","App","exact","path","Home","Login","Signup","User","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.ab776449.chunk.js","sourcesContent":["import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, LOADING_USER, SET_AUTHENTICATED, MARK_NOTIFICATIONS_READ } from './types'\nimport axios from 'axios'\nexport const loginUser = (userData, history) => dispatch => {\n    dispatch({ type: LOADING_UI })\n    axios.post('/login', userData)\n        .then(res => {\n            console.log(res.data)\n            setAuthHeader(res.data.token)\n            dispatch(getUserData())\n            dispatch({ type: CLEAR_ERRORS })\n            history.push('/')\n        }).catch(err => {\n            dispatch({\n                payload: err?.response?.data,\n                type: SET_ERRORS\n            })\n        })\n\n}\nexport const signupUser = (userData, history) => dispatch => {\n    dispatch({ type: LOADING_UI })\n    axios.post('/signup', userData)\n        .then(res => {\n            console.log(res.data)\n            setAuthHeader(res.data.token)\n            dispatch(getUserData())\n            dispatch({ type: CLEAR_ERRORS })\n            history.push('/')\n        }).catch(err => {\n            dispatch({\n                payload: err?.response.data,\n                type: SET_ERRORS\n            })\n        })\n\n}\nexport const getUserData = () => dispatch => {\n    dispatch({ type: LOADING_USER })\n    axios.get('/user')\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                payload: res.data\n            })\n        }).catch(err => {\n            console.log(err);\n\n        })\n}\n\nexport const uploadImage = (formData) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios\n        .post('https://us-central1-socialapp-e0d9f.cloudfunctions.net/api/imageUpload', formData)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const setAuthHeader = (token) => {\n    localStorage.setItem('token', token)\n    axios.defaults.headers.common['Authorization'] = token\n}\nexport const logOut = () => dispatch => {\n    localStorage.removeItem('token')\n    delete axios.defaults.headers.common['Authorization']\n    dispatch({ type: SET_AUTHENTICATED })\n}\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios\n        .post('/user', userDetails)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch((err) => console.log(err))\n};\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\n    axios\n        .post('/notifications', notificationIds)\n        .then((res) => {\n            dispatch({\n                type: MARK_NOTIFICATIONS_READ\n            });\n        })\n        .catch((err) => console.log(err));\n};","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\nexport const SET_USER = 'SET_USER'\nexport const LOADING_USER = 'LOADING_USER'\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ'\n\nexport const SET_ERRORS = 'SET_ERRORS'\nexport const LOADING_UI = 'LOADING_UI'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n\n\n//Data reducer types\nexport const SET_SCREAMS = 'SET_SCREAMS';\nexport const SET_SCREAM = 'SET_SCREAM';\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\nexport const POST_SCREAM = 'POST_SCREAM';\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LIKE_SCREAM, UNLIKE_SCREAM } from './types'\n\nconst initialState = {\n    authenticated: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            }\n        case SET_UNAUTHENTICATED:\n            return {\n                initialState\n            }\n        case SET_USER:\n            return {\n                ...state,\n                authenticated: true,\n                ...action.payload\n            }\n        case LIKE_SCREAM:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        screamId: action.payload.screamId\n\n                    }\n                ]\n            }\n        case UNLIKE_SCREAM:\n            return {\n                ...state,\n                likes: state.likes.filter(\n                    (like) => like.screamId !== action.payload.screamId\n                )\n            }\n        default:\n            return state\n    }\n}","import {\n    SET_SCREAMS,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    LOADING_DATA,\n    DELETE_SCREAM,\n    POST_SCREAM,\n    SET_SCREAM,\n    SUBMIT_COMMENT\n} from './types';\n\nconst initialState = {\n    screams: [],\n    scream: {},\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            };\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload,\n                loading: false\n            };\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n\n            let index = state.screams.findIndex(\n                (scream) => scream.screamId === action.payload.screamId\n            );\n\n            state.screams[index] = action.payload\n            if (state.scream.screamId === action.payload.screamId) {\n                state.scream = action.payload;\n            }\n\n            return {\n                ...state\n            }\n        case DELETE_SCREAM:\n\n            let block = state.screams.findIndex(\n                (scream) => scream.screamId === action.payload\n            );\n            state.screams.splice(block, 1);\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            return {\n                ...state,\n                screams: [action.payload, ...state.screams]\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: {\n                    ...state.scream,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            };\n        default:\n            return state;\n    }\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from './types'\n\nconst initialState = {\n    loading: false,\n    errors: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.null\n            }\n        case LOADING_UI:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state\n    }\n}","import { createStore, combineReducers, applyMiddleware, } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk'\nimport userReducer from './userReducer'\nimport dataReducer from './dataReducer'\nimport UIReducer from './UIReducer'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst reducers = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: UIReducer\n})\n\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    SET_SCREAMS,\n    LOADING_DATA,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    DELETE_SCREAM,\n    SET_ERRORS,\n    POST_SCREAM,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_SCREAM,\n    SUBMIT_COMMENT\n} from './types';\nimport axios from 'axios';\n\n// Get all screams\nexport const getScreams = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get('/screams')\n        .then((res) => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data\n            })\n\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: []\n            });\n        });\n};\nexport const getScream = (screamId) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get(`/scream/${screamId}`)\n        .then((res) => {\n            dispatch({\n                type: SET_SCREAM,\n                payload: res.data\n            });\n\n        })\n        .catch((err) => console.log(err));\n};\n// Post a scream\nexport const postScream = (newScream) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n        .post('/scream', newScream)\n        .then((res) => {\n            dispatch({\n                type: POST_SCREAM,\n                payload: res.data\n            });\n\n\n            dispatch(clearErrors());\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\n// Like a scream\nexport const likeScream = (screamId) => (dispatch) => {\n    axios\n        .get(`/scream/${screamId}/like`)\n        .then((res) => {\n            dispatch({\n                type: LIKE_SCREAM,\n                payload: res.data\n            });\n            console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikeScream = (screamId) => (dispatch) => {\n    axios\n        .get(`/scream/${screamId}/unlike`)\n        .then((res) => {\n            dispatch({\n                type: UNLIKE_SCREAM,\n                payload: res.data\n            });\n            console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n};\n// Submit a comment\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n    axios\n        .post(`/scream/${screamId}/comment`, commentData)\n        .then((res) => {\n            dispatch({\n                type: SUBMIT_COMMENT,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\nexport const deleteScream = (screamId) => (dispatch) => {\n    axios\n        .delete(`/scream/${screamId}`)\n        .then(() => {\n            dispatch({ type: DELETE_SCREAM, payload: screamId });\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const getUserData = (userHandle) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get(`/user/${userHandle}`)\n        .then((res) => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data.screams\n            });\n        })\n\n        .catch(() => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: null\n            });\n        });\n};\n\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n};","import React, { useState, useEffect, Fragment } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { postScream, clearErrors } from '../redux/dataActions'\nconst styles = {\n    submitButton: {\n        position: 'relative',\n        float: 'right',\n        marginTop: 10\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        float: 'right'\n\n    }\n}\n\nfunction PostScream(props) {\n    const [post, setPost] = useState({\n        open: false,\n        body: '',\n        errors: {}\n    })\n    const { open, body, errors } = post\n\n    const handleOpen = () => {\n        setPost({ ...post, open: true });\n    };\n    const handleClose = () => {\n        props.clearErrors();\n        setPost({ ...post, open: false, errors: {} });\n    };\n    const handleChange = (event) => {\n        setPost({ ...post, [event.target.name]: event.target.value });\n    };\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        await props.postScream({ body });\n        if (!props.UI.errors && !props.UI.loading) {\n            setPost({ ...post, open: false, body: '', errors: {} });\n        }\n\n    };\n    useEffect(() => {\n        setPost({\n            ...post,\n            errors: props.UI.errors\n        })\n\n\n    }, [props.UI.errors])\n    const { classes, UI: { loading } } = props\n\n    return (\n        <div>\n            <Fragment>\n                <IconButton onClick={handleOpen}>\n                    <AddIcon />\n                </IconButton>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <IconButton\n                        onClick={handleClose}\n                        className={classes.closeButton}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                    <DialogTitle>Post a new scream</DialogTitle>\n                    <DialogContent>\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                name=\"body\"\n                                type=\"text\"\n                                placeholder='post'\n                                error={errors?.error ? true : false}\n                                helperText={errors?.error}\n                                className={classes.textField}\n                                value={body}\n                                onChange={handleChange}\n                                fullWidth\n                            />\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submitButton}\n                                disabled={loading}\n                            >\n                                Submit\n                {loading && (\n                                    <CircularProgress\n                                        size={30}\n                                        className={classes.progressSpinner}\n                                    />\n                                )}\n                            </Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(\n    mapStateToProps,\n    { postScream, clearErrors }\n)(withStyles(styles)(PostScream));","import React, { useState, Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n// MUI stuff\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n// Icons\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux\nimport { connect } from 'react-redux';\nimport { markNotificationsRead } from '../redux/userActions';\nfunction Notifications(props) {\n\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    const handleOpen = (event) => {\n        setAnchorEl(event.target)\n    };\n    const handleClose = () => {\n        setAnchorEl(null)\n    };\n    const onMenuOpened = () => {\n        let unreadNotificationsIds = props.notifications\n            .filter((notification) => notification.read === 'false')\n            .map((notification) => notification.notificationId)\n        props.markNotificationsRead(unreadNotificationsIds)\n    };\n    const notifications = props.notifications\n\n\n    dayjs.extend(relativeTime);\n    return (\n        <div>\n            <Fragment>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton\n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleOpen}\n                    >\n                        {\n                            notifications && notifications.length > 0 ?\n                                notifications.filter((notification) => notification.read === 'false').length > 0\n                                    ?\n                                    <Badge\n                                        badgeContent={\n                                            notifications.filter((notification) => notification.read === 'false').length\n                                        }\n                                        color=\"secondary\"\n                                    >\n                                        <NotificationsIcon />\n                                    </Badge>\n\n                                    : (<NotificationsIcon />)\n                                : <NotificationsIcon />\n\n                        }\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    onEntered={onMenuOpened}\n                >\n                    {\n                        notifications && notifications.length > 0 ? (\n                            notifications.map((not) => {\n                                const verb = not.type === 'like' ? 'liked' : 'commented on';\n                                const time = dayjs(not.createdAt).fromNow();\n                                const iconColor = not.read ? 'primary' : 'secondary';\n                                const icon =\n                                    not.type === 'like' ? (\n                                        <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n                                    ) : (\n                                            <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n                                        );\n\n                                return (\n                                    <MenuItem key={not.createdAt} onClick={handleClose}>\n                                        {icon}\n                                        <Typography\n                                            component={Link}\n                                            color=\"default\"\n                                            variant=\"body1\"\n                                            to={`/users/${not.recipient}/scream/${not.screamId}`}\n                                        >\n                                            {not.sender} {verb} your scream {time}\n                                        </Typography>\n                                    </MenuItem>\n                                );\n                            })\n                        ) : (\n                                <MenuItem onClick={handleClose}>\n                                    You have no notifications yet\n                                </MenuItem>\n                            )\n                    }\n                </Menu>\n            </Fragment>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    notifications: state.user.notifications\n});\n\nexport default connect(\n    mapStateToProps,\n    { markNotificationsRead }\n)(Notifications);","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { connect } from 'react-redux'\nimport PostScream from './PostScream';\nimport Notifications from './Notifications'\nfunction Navbar(props) {\n    const { authenticated } = props\n    return (\n        <div>\n            <AppBar>\n                <Toolbar className='nav__container'>\n                    {authenticated ? (\n                        <div className='nav__links'>\n                            <PostScream />\n                            <Tooltip title='Home'>\n                                <IconButton >\n                                    <Link to='/'>\n                                        <HomeIcon />\n                                    </Link>\n                                </IconButton>\n                            </Tooltip>\n                            <Notifications />\n                        </div>\n                    ) : (\n                            <div>\n                                <Button color='inherit' component={Link} to='/login'>Login</Button>\n                                <Button color='inherit' component={Link} to='/signup'>Signup</Button>\n                                <Button color='inherit' component={Link} to='/'>Home</Button>\n                            </div>)}\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated\n})\n\nexport default connect(mapStateToProps)(Navbar)\n","import React, { Fragment } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n// MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Avatar } from '@material-ui/core';\n\nconst styles = {\n    commentImage: {\n        maxWidth: '100%',\n        height: 100,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    commentData: {\n        marginLeft: 20\n    }\n}\nfunction Comments(props) {\n    const { comments, classes } = props;\n    return (\n        <div>\n            <Grid container>\n                {comments ? comments.map((comment, index) => {\n                    const { body, createdAt, imageUrl, userHandle } = comment\n                    return (\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    <Grid item sm={2}>\n                                        <Avatar alt=\"Remy Sharp\" src={imageUrl} />\n\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        <div className={classes.commentData}>\n                                            <Typography\n                                                variant=\"h5\"\n                                                component={Link}\n                                                to={`/users/${userHandle}`}\n                                                color=\"primary\"\n                                            >\n                                                {userHandle}\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <hr className={classes.invisibleSeparator} />\n                                            <Typography variant=\"body1\">{body}</Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {index !== comments.length - 1 && (\n                                <hr className={classes.visibleSeparator} />\n                            )}\n                        </Fragment>\n                    );\n                }) : null}\n            </Grid>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Comments);","import React, { useState, useEffect } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { submitComment } from '../redux/dataActions';\nconst styles = {\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    textField: {\n        margin: '10px auto'\n    },\n    button: {\n        marginLeft: '10px',\n        textTransform: 'inherit',\n        borderRadius: '15px'\n    },\n\n}\n\nfunction CommentForm(props) {\n\n    const [form, setForm] = useState({\n        body: '',\n        errors: null\n    })\n    const { body, errors } = form\n    const handleChange = (event) => {\n        setForm({ ...form, [event.target.name]: event.target.value });\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.submitComment(props.screamId, { body });\n        setForm({ ...form, body: '' })\n    };\n    const { classes, authenticated } = props;\n    useEffect(() => {\n        setForm({\n            ...form,\n            errors: props.UI.errors\n        })\n    }, [props.UI.errors])\n    return (\n        <div>\n            {\n                authenticated ? (\n                    <Grid item sm={12} style={{ textAlign: 'center', marginLeft: '20px' }}>\n                        <form onSubmit={handleSubmit} className={classes.form}>\n                            <TextField\n                                name=\"body\"\n                                type=\"text\"\n                                label=\"Comment\"\n                                error={errors?.comment ? true : false}\n                                helperText={errors?.comment}\n                                value={body}\n                                onChange={handleChange}\n                                fullWidth\n                                className={classes.textField}\n                            />\n                            <Button\n                                type=\"submit\"\n                                size=\"small\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                            >\n                                Submit\n                        </Button>\n                        </form>\n                    </Grid>\n                ) : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    { submitComment }\n)(withStyles(styles)(CommentForm));","import React, { Fragment, useEffect, useState } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm'\n\n// MUI Stuff\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../redux/dataActions';\nimport { Avatar, IconButton, Tooltip } from '@material-ui/core';\n\nconst styles = {\n\n    profileImage: {\n        borderRadius: '50%',\n        objectFit: 'cover'\n    },\n    dialogContent: {\n        padding: 20\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '80%'\n    },\n    expandButton: {\n        /* position: 'absolute',\n         left: '90%'*/\n    },\n    spinnerDiv: {\n        textAlign: 'center',\n        marginTop: 50,\n        marginBottom: 50\n    },\n    flexBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'start'\n    },\n\n}\nfunction ScreamDialog(props) {\n\n    const [scream, setScream] = useState({\n        open: false,\n        oldPath: '',\n        newPath: ''\n    })\n    const { open, oldPath, newPath } = scream\n\n    useEffect(() => {\n        if (props.openDialog) {\n            handleOpen()\n        }\n    }, [])\n\n    const handleOpen = () => {\n        const { userHandle, screamId } = props\n        setScream({\n            ...scream,\n            oldPath: window.location.pathname,\n            newPath: `/users/${userHandle}/scream/${screamId}`\n        })\n        if (oldPath === newPath) {\n            setScream({\n                ...scream,\n                oldPath: `users/${userHandle}`\n            })\n        }\n\n        window.history.pushState(null, null, newPath)\n\n        setScream({\n            ...scream,\n            open: true,\n            oldPath,\n            newPath\n        })\n\n        props.getScream(props.openDialog ? props.openDialog : props.screamId)\n    }\n    const handleClose = () => {\n        window.history.pushState(null, null, oldPath)\n        setScream({\n            ...scream,\n            open: false\n        })\n        props.clearErrors()\n    }\n\n    const {\n        classes,\n        scream: {\n            body,\n            createdAt,\n            likeCount,\n            commentCount,\n            imageUrl,\n            userHandle,\n            comments\n\n        },\n        UI: { loading }\n    } = props;\n    return (\n        <div className={classes.container}>\n            <Fragment>\n                <Tooltip title='Expand scream'>\n                    <IconButton\n                        onClick={handleOpen}\n                        className={classes.expandButton}\n                    >\n                        <UnfoldMoreIcon color=\"primary\" />\n                    </IconButton>\n                </Tooltip>\n\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <Tooltip title='Close'>\n                        <IconButton\n                            onClick={handleClose}\n                            className={classes.closeButton}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n\n                    <DialogContent className={classes.dialogContent}>\n                        {\n                            loading ? (\n                                <div className={classes.spinnerDiv}>\n                                    <CircularProgress size={200} thickness={2} />\n                                </div>\n                            ) : (\n                                    <Grid container>\n                                        <Grid item sm={1}>\n\n                                            <Avatar alt=\"Remy Sharp\" src={imageUrl} className={classes.profileImage} />\n\n                                        </Grid>\n                                        <Grid item sm={8}>\n                                            <Typography\n                                                component={Link}\n                                                color=\"primary\"\n                                                variant=\"h6\"\n                                                to={`/users/${userHandle}`}\n                                            >\n                                                @{userHandle}\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <br />\n                                            <Typography variant=\"body1\">{body}</Typography>\n\n                                            <span>{likeCount} likes</span>\n                                            <Tooltip title='comments'>\n                                                <IconButton>\n                                                    <ChatIcon color=\"primary\" />\n                                                </IconButton>\n                                            </Tooltip>\n\n                                            <span>{commentCount} comments</span>\n                                            <CommentForm screamId={props.screamId} />\n                                        </Grid>\n\n                                        <Comments comments={comments} />\n                                    </Grid>\n                                )\n                        }\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({\n    scream: state.data.scream,\n    UI: state.UI\n});\nexport default connect(\n    mapStateToProps,\n    {\n        getScream,\n        clearErrors\n    }\n)(withStyles(styles)(ScreamDialog));","import React, { useState, Fragment } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\nimport { connect } from 'react-redux';\nimport { deleteScream } from '../redux/dataActions';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nconst styles = {\n    deleteButton: {\n        /*position: 'absolute',\n        left: '90%',\n        top: '10%'*/\n    }\n};\nfunction DeleteScream(props) {\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n    const deleteScream = () => {\n        props.deleteScream(props.screamId);\n        setOpen(false)\n    };\n    const { classes } = props\n    return (\n        <div>\n            <Fragment>\n                <Tooltip title='Delete scream'>\n                    <IconButton\n                        tip=\"Delete Scream\"\n                        onClick={handleOpen}\n                        className={classes.deleteButton}\n                    >\n                        <DeleteOutline color=\"secondary\" fontSize='small' />\n                    </IconButton>\n                </Tooltip>\n\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <DialogTitle>\n                        Are you sure you want to delete this scream ?\n          </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n            </Button>\n                        <Button onClick={deleteScream} color=\"secondary\">\n                            Delete\n            </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        </div>\n    )\n}\n\nexport default connect(\n    null,\n    { deleteScream }\n)(withStyles(styles)(DeleteScream));","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n// Icons\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// REdux\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../redux/dataActions';\nimport { IconButton, Tooltip } from '@material-ui/core';\nfunction LikeButton(props) {\n    const { authenticated } = props.user;\n    const likedScream = () => {\n        if (\n            props.user.likes &&\n            props.user.likes.find(\n                (like) => like.screamId === props.screamId\n            )\n        )\n            return true;\n        else return false;\n    };\n\n    const likeScream = () => {\n        props.likeScream(props.screamId)\n    };\n    const unlikeScream = () => {\n        props.unlikeScream(props.screamId)\n    };\n\n    return (\n        <div>\n            {\n                !authenticated ? (\n                    <Link to=\"/login\">\n                        <Tooltip title='Like'>\n                            <IconButton>\n                                <FavoriteBorder color=\"primary\" fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    </Link>\n                ) : likedScream() ? (\n                    <Tooltip title='undo like'>\n                        <IconButton onClick={unlikeScream}>\n                            <FavoriteIcon color=\"primary\" fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n\n                ) : (\n                            <Tooltip title='like'>\n                                <IconButton tip=\"Like\" onClick={likeScream}>\n                                    <FavoriteBorder color=\"primary\" fontSize='small' />\n                                </IconButton>\n                            </Tooltip>\n\n                        )\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nconst mapActionsToProps = {\n    likeScream,\n    unlikeScream\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(LikeButton);","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport ScreamDialog from './ScreamDialog';\nimport DeleteScream from './DeleteScream';\nimport LikeButton from './LikeButton';\nimport { Avatar, IconButton, Tooltip } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { connect } from 'react-redux'\n\nconst styles = {\n    card: {\n        display: \"flex\",\n        marginBottom: \"20px\",\n    },\n    link: {\n        textDecoration: 'none'\n    },\n    content: {\n        objectFit: 'cover',\n    },\n    image: {\n        margin: 20,\n    },\n    flexBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'start'\n    },\n\n}\n\nfunction Scream(props) {\n\n    const { classes,\n        scream: { body, createdAt, imageUrl, screamId, commentCount, userHandle },\n        user: {\n            authenticated,\n            credentials: { handle }\n        }\n    } = props\n    dayjs.extend(relativeTime)\n\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <Avatar alt=\"Remy Sharp\" src={imageUrl} className={classes.image} />\n\n                <CardContent>\n                    <Typography variant='h6'\n                        component={Link}\n                        to={`/users/${userHandle}`}\n                        className={classes.link}\n                        color='primary'\n                    >{userHandle}</Typography>\n\n                    <Typography variant='body1'>{body}</Typography>\n                    <Typography variant='body2' color='textSecondary'>{dayjs(createdAt).fromNow()\n                    }</Typography>\n                    <div className={classes.flexBox}>\n                        <div>\n                            <LikeButton screamId={screamId} />\n                        </div>\n                        <div>\n                            <Tooltip title='comments'>\n                                <IconButton tip=\"comments\">\n                                    <ChatIcon color=\"primary\" fontSize='small' />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                        <div>\n                            <ScreamDialog\n                                screamId={screamId}\n                                userHandle={userHandle}\n                                openDialog={props.openDialog}\n                            />\n                        </div>\n                        {\n                            authenticated && userHandle === handle ? (\n                                <DeleteScream screamId={screamId} />\n                            ) : null\n                        }\n                    </div>\n                    <span>{commentCount} comments</span>\n\n                </CardContent>\n            </Card>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream))\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { editUserDetails } from '../redux/userActions'\nimport { connect } from 'react-redux'\nimport { DialogContent, DialogTitle, IconButton, TextField, Tooltip, Button, DialogActions, Dialog } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = {\n    textField: {\n        margin: '10px auto'\n    },\n    button: {\n        float: \"right\"\n    },\n}\n\n\n\nfunction EditDetails(props) {\n    const [details, setDetails] = useState({\n        bio: '',\n        website: '',\n        location: '',\n        open: false\n    })\n    const { bio, website, location, open } = details\n    const { classes, user: credentials } = props;\n\n    useEffect(() => {\n        setDetails({\n            ...details,\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : '',\n\n        })\n    }, [])\n    const handleOpen = () => {\n        setDetails({\n            ...details,\n            open: !open\n        })\n    }\n    const handleChange = (event) => {\n        setDetails({\n            ...details,\n            [event.target.name]: event.target.value\n        });\n    };\n    const handleSubmit = () => {\n        const userDetails = {\n            bio: bio,\n            website: website,\n            location: location\n        };\n        props.editUserDetails(userDetails);\n        handleOpen()\n    };\n    return (\n        <Fragment>\n            <Tooltip title='Edit Details' placement='top'>\n                <IconButton onClick={handleOpen} className={classes.button}>\n                    <EditIcon color='primary' />\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                onClose={handleOpen} open={open} fullWidth maxWidth='sm'>\n                <DialogTitle >Edit details</DialogTitle>\n\n                <DialogContent>\n                    <form>\n                        <TextField\n                            name=\"bio\"\n                            tpye=\"text\"\n                            label=\"Bio\"\n                            multiline\n                            rows=\"3\"\n                            placeholder=\"A short bio about yourself\"\n                            className={classes.textField}\n                            value={bio}\n                            onChange={handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            name=\"website\"\n                            tpye=\"text\"\n                            label=\"Website\"\n                            placeholder=\"Your personal/professinal website\"\n                            className={classes.textField}\n                            value={website}\n                            onChange={handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            name=\"location\"\n                            tpye=\"text\"\n                            label=\"Location\"\n                            placeholder=\"Where you live\"\n                            className={classes.textField}\n                            value={location}\n                            onChange={handleChange}\n                            fullWidth\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleOpen} color=\"primary\">\n                        Cancel\n            </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Save\n            </Button>\n                </DialogActions>\n            </Dialog>\n\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails))\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoImg from '../images/blank-profile-picture-973460_640.png'\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUI\nimport Paper from '@material-ui/core/Paper';\n// Icons\n\n\nconst styles = {\n    handle: {\n        height: 20,\n        width: 60,\n        margin: '0 auto 7px auto'\n    },\n    fullLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '100%',\n        marginBottom: 10\n    },\n    halfLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '50%',\n        marginBottom: 10\n    },\n    paper: {\n        padding: 20\n    },\n    profile: {\n        '& .image-wrapper': {\n            textAlign: 'center',\n            position: 'relative',\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n    },\n    profileImage: {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%'\n    },\n    '& .profile-details': {\n        textAlign: 'center',\n        '& span, svg': {\n            verticalAlign: 'middle'\n        },\n        '& a': {\n            color: '#00bcd4'\n        }\n    },\n    '& hr': {\n        border: 'none',\n        margin: '0 0 10px 0'\n    },\n    '& svg.button': {\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    }\n\n\n}\n\nconst ProfileSkeleton = (props) => {\n    const { classes } = props;\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={NoImg} alt=\"profile\" className={classes.profileImage} />\n                </div>\n                <hr />\n                <div className=\"profile-details\">\n                    <div className={classes.handle} />\n                    <hr />\n                    <div className={classes.fullLine} />\n                    <div className={classes.fullLine} />\n\n                </div>\n            </div>\n        </Paper>\n    );\n};\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProfileSkeleton);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport dayjs from 'dayjs'\nimport CalendarTodayRoundedIcon from '@material-ui/icons/CalendarTodayRounded';\nimport { Link } from 'react-router-dom'\nimport EditIcon from '@material-ui/icons/Edit';\nimport LinkIcon from '@material-ui/icons/Link';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { IconButton } from '@material-ui/core';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { uploadImage, logOut } from '../redux/userActions'\nimport EditDetails from './EditDetails';\nimport ProfileSkeleton from './ProfileSkeleton';\n\nconst styles = {\n    paper: {\n        padding: 20\n    },\n\n\n    profileImage: {\n        width: 150,\n        height: 150,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    profileDetails: {\n        textAlign: 'center',\n        '& span, svg': {\n            verticalAlign: 'middle'\n        },\n        '& a': {\n            color: '#00bcd4'\n        }\n    },\n    flexBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n\n    }\n\n\n}\n\nconst Profile = (props) => {\n\n    const {\n        classes,\n        user: {\n            credentials: { handle, createdAt, imageUrl, bio, website, location },\n            loading,\n            authenticated\n        }\n    } = props;\n\n    const handleEditPicture = () => {\n        const fileInput = document.querySelector('#imageInput')\n        fileInput.click()\n    }\n    const handleImageChange = (e) => {\n        const image = e.target.files[0]\n        //send to server\n        const formData = new FormData()\n        formData.append('image', image, image.name)\n        props.uploadImage(formData)\n    }\n    const handleLogOut = () => {\n        props.logOut()\n    }\n    return (\n        <div>\n            {\n                !loading ?\n                    (\n                        authenticated ?\n                            (\n                                <Paper className={classes.paper}>\n                                    <Avatar alt=\"Remy Sharp\" src={imageUrl} className={classes.profileImage} />\n                                    <Tooltip title='Edit profile picture' placement='top'>\n                                        <IconButton onClick={handleEditPicture}>\n                                            <input\n                                                type=\"file\"\n                                                id=\"imageInput\"\n                                                hidden=\"hidden\"\n                                                onChange={handleImageChange}\n                                            />\n                                            <EditIcon color=\"primary\" fontSize=\"small\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <div className={classes.profileDetails}>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"h6\"\n                                            className={classes.inline}\n                                            color=\"primary\"\n                                        >\n                                            {`@${handle}`}\n                                        </Typography>\n                                        <div>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={classes.inline}\n                                                color=\"textPrimary\"\n                                            >\n                                                {bio && <Typography variant=\"body2\">{bio}</Typography>}\n                                            </Typography>\n                                        </div>\n\n                                        {createdAt && (\n                                            <div>\n                                                <CalendarTodayRoundedIcon color=\"primary\" fontSize=\"small\" />{' '}\n                                                <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n                                            </div>\n                                        )}\n\n\n                                        <br />\n                                        {location && (\n                                            <div className={classes.flexBox}>\n                                                <LocationOnIcon color=\"primary\" fontSize=\"small\" /> <span>{location}</span>\n                                            </div>\n                                        )}\n\n\n                                        {website && (\n                                            <div className={classes.flexBox}>\n                                                <LinkIcon color=\"primary\" />\n                                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                    {website}\n                                                </a>\n                                            </div>\n                                        )}\n\n                                    </div>\n\n                                    <div className={classes.flexBox}>\n                                        <Tooltip title='logout' placement='top'>\n                                            <IconButton onClick={handleLogOut}>\n                                                <KeyboardReturnIcon color='primary' />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <EditDetails />\n                                    </div>\n                                </Paper>\n                            ) : (<Paper className={classes.paper}>\n                                <Typography variant='body2' align='center'>\n                                    No profile found ,please login\n                                </Typography>\n                                <div className={classes.button}>\n                                    <Button variant='contained' color='primary' component={Link} to='/login'>login</Button>\n                                    <Button variant='contained' color='secondary' component={Link} to='/signup'>signup</Button>\n\n                                </div>\n                            </Paper>)\n                    ) : (<ProfileSkeleton />)\n            }\n\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\n\n\nexport default connect(mapStateToProps, { uploadImage, logOut })(withStyles(styles)(Profile))\n","import React, { Fragment } from 'react';\nimport NoImg from '../images/blank-profile-picture-973460_640.png'\nimport PropTypes from 'prop-types';\n// MUI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n\n    card: {\n        display: 'flex',\n        marginBottom: 20\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column',\n        padding: 25\n    },\n    cover: {\n        minWidth: 200,\n        objectFit: 'cover'\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        marginBottom: 7\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0, 0.3)',\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: '90%',\n        backgroundColor: 'rgba(0,0,0, 0.6)',\n        marginBottom: 10\n    },\n    halfLine: {\n        height: 15,\n        width: '50%',\n        backgroundColor: 'rgba(0,0,0, 0.6)',\n        marginBottom: 10\n    }\n}\n\nconst ScreamSkeleton = (props) => {\n    const { classes } = props;\n\n    const content = Array.from({ length: 5 }).map((item, index) => (\n        <Card className={classes.card} key={index}>\n            <CardMedia className={classes.cover} image={NoImg} />\n            <CardContent className={classes.cardContent}>\n                <div className={classes.handle} />\n                <div className={classes.date} />\n                <div className={classes.fullLine} />\n                <div className={classes.fullLine} />\n                <div className={classes.halfLine} />\n            </CardContent>\n        </Card>\n    ));\n\n    return <Fragment>{content}</Fragment>;\n};\n\nScreamSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ScreamSkeleton);","import { Grid } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport Scream from './Scream'\nimport Profile from './Profile'\nimport ScreamSkeleton from './ScreamSkeleton'\nimport { getScreams } from '../redux/dataActions'\nimport { connect } from 'react-redux'\nfunction Home(props) {\n\n    const [screams, setScreams] = useState([])\n    useEffect(() => {\n        props.getScreams()\n        setScreams(props.screams)\n\n    }, [props.screams.length])\n\n    return (\n        <div>\n            <Grid container spacing={1}>\n                <Grid item sm={8} xs={12}>\n                    {\n                        screams.length > 0 ?\n                            screams.map(scream => {\n                                return <Scream scream={scream} key={scream.screamId} />\n                            })\n                            : <ScreamSkeleton />\n                    }\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        screams: state.data.screams\n    }\n}\nexport default connect(mapStateToProps, { getScreams })(Home)\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, CircularProgress, Grid, TextField, Typography } from '@material-ui/core';\nimport { loginUser } from '../redux/userActions'\n\nconst styles = {\n    form: {\n        textAlign: 'center'\n    },\n    pageTitle: {\n        margin: '10px auto'\n    },\n    textField: {\n        margin: '10px auto'\n    },\n    button: {\n        marginTop: '20px',\n        position: 'relative'\n    },\n    customError: {\n        marginTop: '10px',\n        color: 'red'\n    },\n    progress: {\n        position: 'absolute'\n    }\n}\n\n\nfunction Login(props) {\n    const { classes, UI: { loading } } = props\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        errors: null\n    })\n    const { email, password, errors } = formData\n\n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n\n        })\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const userData = {\n            email,\n            password\n        }\n        props.loginUser(userData, props.history)\n\n    }\n    useEffect(() => {\n        setFormData({\n            ...formData,\n            errors: props.UI.errors\n        })\n    }, [props.UI.errors])\n    return (\n        <div>\n            <Grid\n                className={classes.form}\n                container>\n                <Grid item sm></Grid>\n                <Grid item sm>\n                    <Typography variant='h2' className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={handleSubmit}>\n                        <TextField id='email'\n                            type='email'\n                            name='email'\n                            label='Email'\n                            className={classes.textField}\n                            value={email}\n                            onChange={handleChange}\n                            helperText={errors?.email}\n                            error={errors?.email ? true : false}\n                            fullWidth />\n                        <TextField id='password'\n                            type='password'\n                            name='password'\n                            label='Password'\n                            className={classes.textField}\n                            value={password}\n                            onChange={handleChange} fullWidth\n                            helperText={errors?.password}\n                            error={errors?.password ? true : false} />\n                        {errors?.error && (\n                            <Typography vriant='body2'\n                                className={classes.customError}>{errors?.error}</Typography>\n                        )}\n                        <Button variant=\"contained\" color=\"primary\"\n                            type='submit'\n                            className={classes.button}\n                            disabled={loading}>\n                            Login\n                            {\n                                loading && (<CircularProgress className={classes.progress} />\n                                )\n                            }\n                        </Button>\n                        <br />\n                        <small>dont have an account <Link to='/signup'>Signup</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm></Grid>\n            </Grid>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        UI: state.UI\n    }\n}\nexport default connect(mapStateToProps, { loginUser })(withStyles(styles)(Login))\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Button, CircularProgress, Grid, TextField, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport { signupUser } from '../redux/userActions'\n\nconst styles = {\n    form: {\n        textAlign: 'center'\n    },\n    pageTitle: {\n        margin: '10px auto'\n    },\n    textField: {\n        margin: '10px auto'\n    },\n    button: {\n        marginTop: '20px',\n        position: 'relative'\n    },\n    customError: {\n        marginTop: '10px',\n        color: 'red'\n    },\n    progress: {\n        position: 'absolute'\n    }\n}\n\nfunction Signup(props) {\n    const { classes, UI: { loading } } = props\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        handle: '',\n        errors: null\n    })\n    const { email, password, errors, handle, confirmPassword } = formData\n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n\n        })\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setFormData({\n            ...formData,\n            loading: true\n        })\n        const userData = {\n            email,\n            password,\n            confirmPassword,\n            handle\n        }\n        props.signupUser(userData, props.history)\n    }\n    useEffect(() => {\n        setFormData({\n            ...formData,\n            errors: props.UI.errors\n        })\n    }, [props.UI.errors])\n    return (\n        <div>\n            <Grid\n                className={classes.form}\n                container>\n                <Grid item sm></Grid>\n                <Grid item sm>\n                    <Typography variant='h2' className={classes.pageTitle}>Signup</Typography>\n                    <form noValidate onSubmit={handleSubmit}>\n                        <TextField id='email'\n                            type='email'\n                            name='email'\n                            label='Email'\n                            className={classes.textField}\n                            value={email}\n                            onChange={handleChange}\n                            helperText={errors?.email}\n                            error={errors?.email ? true : false}\n                            fullWidth />\n                        <TextField id='password'\n                            type='password'\n                            name='password'\n                            label='Password'\n                            className={classes.textField}\n                            value={password}\n                            onChange={handleChange} fullWidth\n                            helperText={errors?.password}\n                            error={errors?.password ? true : false} />\n                        <TextField id='confirmPassword'\n                            type='password'\n                            name='confirmPassword'\n                            label='confirmPassword'\n                            className={classes.textField}\n                            value={confirmPassword}\n                            onChange={handleChange} fullWidth\n                            helperText={errors?.confirmPassword}\n                            error={errors?.confirmPassword ? true : false} />\n                        <TextField id='handle'\n                            type='text'\n                            name='handle'\n                            label='handle'\n                            className={classes.textField}\n                            value={handle}\n                            onChange={handleChange} fullWidth\n                            helperText={errors?.handle}\n                            error={errors?.handle ? true : false} />\n                        {errors?.error && (\n                            <Typography vriant='body2'\n                                className={classes.customError}>{errors?.error}</Typography>\n                        )}\n                        <Button variant=\"contained\" color=\"primary\"\n                            type='submit'\n                            className={classes.button}\n                            disabled={loading}>\n                            Signup\n                            {\n                                loading && (<CircularProgress className={classes.progress} />\n                                )\n                            }\n                        </Button>\n                        <br />\n                        <small>already have an account <Link to='/login'>Login</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm></Grid>\n            </Grid>\n        </div>\n    )\n}\nSignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        UI: state.UI\n    }\n}\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(Signup))\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nfunction AuthRoute({ component: Component, authenticated, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => authenticated === true ? <Redirect to='/' /> : <Component {...props} />}\n        />\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        authenticated: state.user.authenticated\n    }\n}\nexport default connect(mapStateToProps)(AuthRoute)\n","import React, { Fragment } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n// MUI\nimport MuiLink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nconst styles = {\n    paper: {\n        padding: 20\n    },\n    profile: {\n        '& .image-wrapper': {\n            textAlign: 'center',\n            position: 'relative',\n            '& button': {\n                position: 'absolute',\n                top: '80%',\n                left: '70%'\n            }\n        },\n    },\n    profileImage: {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%'\n    },\n    profileDetails: {\n        textAlign: 'center',\n        '& span, svg': {\n            verticalAlign: 'middle'\n        },\n        '& a': {\n            color: '#00bcd4'\n        }\n    },\n    '& hr': {\n        border: 'none',\n        margin: '0 0 10px 0'\n    },\n    '& svg.button': {\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    }\n\n}\nfunction StaticProfile(props) {\n    const {\n        classes,\n        profile: { handle, createdAt, imageUrl, bio, website, location }\n    } = props;\n\n    return (\n        <div>\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} alt=\"profile\" className={classes.profileImage} />\n                    </div>\n                    <div className={classes.profileDetails}>\n                        <MuiLink\n                            component={Link}\n                            to={`/users/${handle}`}\n                            color=\"primary\"\n                            variant=\"h5\"\n                        >\n                            @{handle}\n                        </MuiLink>\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\n                        {location && (\n                            <Fragment>\n                                <LocationOn color=\"primary\" /> <span>{location}</span>\n                            </Fragment>\n                        )}\n                        <br />\n                        {website && (\n                            <Fragment>\n                                <LinkIcon color=\"primary\" />\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}\n                                    {website}\n                                </a>\n                            </Fragment>\n                        )}\n                        <br />\n                        <CalendarToday color=\"primary\" />{' '}\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(StaticProfile);\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport Scream from './Scream';\nimport StaticProfile from './StaticProfile';\nimport Grid from '@material-ui/core/Grid';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/dataActions';\nimport ProfileSkeleton from './ProfileSkeleton';\n\nfunction User(props) {\n    const [userData, setUserData] = useState({\n        profile: null,\n        screamIdParam: null\n    })\n    const { profile, screamIdParam } = userData\n    const handle = props.match.params.handle;\n    const screamId = props.match.params.screamId;\n    useEffect(() => {\n\n\n        if (screamId) setUserData({ ...userData, screamIdParam: screamId });\n\n        props.getUserData(handle);\n        axios\n            .get(`/user/${handle}`)\n            .then((res) => {\n                setUserData({\n                    ...userData,\n                    profile: res.data.user\n                });\n            })\n            .catch((err) => console.log(err));\n    }, [])\n    const { screams, loading } = props.data;\n\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item sm={8} xs={12}>\n                    {\n                        loading ? (\n                            <p>loading...</p>\n                        ) : screams === null ? (\n                            <p>No screams from this user</p>\n                        ) : !screamIdParam ? (\n                            screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n                        ) : (\n                                        screams.map((scream) => {\n                                            if (scream.screamId !== screamIdParam)\n                                                return <Scream key={scream.screamId} scream={scream} />\n                                            else return <Scream key={scream.screamId} scream={scream} openDialog={screamId} />\n                                        })\n                                    )\n                    }\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {profile === null ? (\n                        <ProfileSkeleton />\n                    ) : (\n                            <StaticProfile profile={profile} />\n                        )}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.data\n});\n\nexport default connect(\n    mapStateToProps,\n    { getUserData }\n)(User)","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport jwtDecode from 'jwt-decode'\nimport { Provider } from 'react-redux'\n\nimport { SET_AUTHENTICATED } from './redux/types'\nimport { logOut, getUserData } from './redux/userActions'\nimport store from './redux/store'\nimport Navbar from './components/Navbar';\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport AuthRoute from './components/AuthRoute'\nimport axios from 'axios'\nimport User from './components/User'\nconst theme = createMuiTheme({\n\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff',\n\n    },\n    form: {\n      textAlign: 'center'\n    },\n    pageTitle: {\n      margin: '10px auto'\n    },\n    textField: {\n      margin: '10px auto'\n    },\n    button: {\n      marginTop: '20px',\n      position: 'relative'\n    },\n    customError: {\n      marginTop: '10px',\n      color: 'red'\n    },\n    progress: {\n      position: 'absolute'\n    }\n  }\n})\n\naxios.defaults.baseURL =\n  'https://us-central1-socialapp-e0d9f.cloudfunctions.net/api';\n\nif (localStorage.token) {\n  const decodedToken = jwtDecode(localStorage.token)\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logOut())\n\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED })\n    axios.defaults.headers.common['Authorization'] = localStorage.token\n\n    store.dispatch(getUserData())\n  }\n}\nfunction App() {\n  return (\n    <div>\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <AuthRoute exact path='/login' component={Login} />\n                <AuthRoute exact path='/signup' component={Signup} />\n                <Route\n                  exact\n                  path=\"/users/:handle\"\n                  component={User}\n                />\n                <Route\n                  exact\n                  path=\"/users/:handle/scream/:screamId\"\n                  component={User}\n                />\n\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blank-profile-picture-973460_640.6732bd42.png\";"],"sourceRoot":""}